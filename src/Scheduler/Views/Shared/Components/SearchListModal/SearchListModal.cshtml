@using System.Text.Json;
@using Scheduler;
@using Scheduler.Domain.Services;

@inject IDateProvider DateProvider

@{
    IEnumerable<Event> events = this.ViewData["Events"] as IEnumerable<Event> ?? Enumerable.Empty<Event>();
    IEnumerable<Team> teams = this.ViewData["Teams"] as IEnumerable<Team> ?? Enumerable.Empty<Team>();

    string title = this.ViewData["Title"] as string ?? string.Empty;
    string today = this.DateProvider.Now.ToString(Constants.DATE_FORMAT);

    DateTime startDate = Convert.ToDateTime(this.ViewData["Start"]);
    DateTime endDate = Convert.ToDateTime(this.ViewData["End"]);

    string startDateString = startDate.ToString(Constants.DATE_FORMAT);
    string endDateString = endDate.ToString(Constants.DATE_FORMAT);
    string searchModalStartDateString = startDate.ToString(Constants.DATE_FORMAT);
    string searchModalEndDateString = endDate.ToString(Constants.DATE_FORMAT);

    string selectedTeam = this.ViewData["SelectedTeam"] as string ?? string.Empty;
    string searchTerm = this.ViewData["SearchTerm"] as string ?? string.Empty;    
}

<div class="modal fade" id="searchListModalPopup" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header noPrintIfModal">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <h2 class="mb-4" id="searchModalTitle"></h2>
                    <div class="btn-group mb-2 noPrintIfModal">
                        <form class="me-3" action="javascript:void(0);" onsubmit="filterEvents(this)" id="searchForm" autocomplete="off">
                            <input name="FilterStartDate" hidden id="FilterStartDate" />
                            <input name="FilterEndDate" hidden id="FilterEndDate" />
                            
                            <div>
                                <div class="linkElement">
                                    <button type="button" class="button buttonRed" onclick="showModalDropdown()" data-bs-auto-close="false" aria-expanded="false">Filter Results</button>
                                    <button class="button buttonRed" type="reset" onclick="resetEvents()">Reset Filter</button>
                                </div>
                                <ul class="dropdown-menu p-3" style="width:120%" id="searchListModalDropdown">
                                    <h5 class="lead text-danger text-center">Filter Criteria <i class="bi bi-question-circle calendar-full" data-bs-toggle="tooltip" data-bs-placement="right" title="Choose options below to filter your results."></i></h5>
                                    <div class="form-label">
                                        <label class="form-label">Event Date(s) <i class="bi bi-question-circle" data-bs-custom-class="custom-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title="<b>To use the PCYS Date Picker:</b><br /><br /><b>Picking a single date:</b> Click twice on the desired day.<br /><br /><b>Picking a range of days:</b> Click once on the starting day, then click on the ending day. The highlight between the days will show the range.<br /><br />Once the desired dates are selected and shown at the bottom, click 'Apply' and confirm that the desired dates show in the resulting box.<br /><br />Do not click outside of the datepicker box without clicking 'Apply' or the new dates will <u>not</u> be applied."></i></label>
                                        <input type="text" name="searchdaterange" class="text-center form-control" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Event Type</label>
                                        <select name="type" class="form-select">
                                            <option value="Event">Events</option>
                                            <option value="Non-Team Event">Non-Team Events</option>
                                            <option value="Practice">Practices</option>
                                            <option value="Game">Games</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Event Name</label>
                                        <input type="text" name="searchTerm" value="@searchTerm" class="form-control" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Team Name</label>
                                            @if (selectedTeam != "")
                                            {
                                                <select name="teamName" class="form-select chosen">
                                                    <option value="@selectedTeam">@selectedTeam</option>
                                                </select>
                                            }
                                            else
                                            {
                                                <select id="teamNameSearchFilter" name="teamName" class="form-select chosen">
                                                    <option value=""></option>
                                                    @foreach (Team t in teams)
                                                    {
                                                        <option value=@t.Name>@t.Name</option>
                                                    }
                                                </select>
                                            }
                                    </div>
                                    <div class="text-center">
                                        <div class="linkElement">
                                            <input type="submit" class="button buttonYellow" value="Search" />
                                            <button type="button" class="button buttonRed" onclick="closeDropdown()">Close</button>
                                        </div>
                                    </div>
                                </ul>
                            </div>
                        </form>
                    </div>
                </div>
                <div id="searchModalTable">
                    <partial name="_ListModalTable" model="events"/>
                </div>
            </div>
            <div class="modal-footer noPrintIfModal">
                <div class="linkElement">
                    <button class="button buttonYellow calendar-full" onclick="window.print()">Print These Results</button>
                    <button type="button" class="button buttonRed" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function (){
        $("#searchListModalPopup").modal("show");
        setSearchFilterDatePicker();
        setTitle("@title");
        $("#teamNameSearchFilter").select2({
            placeholder: "Start typing to select a Team...",
            width: "100%",
            dropdownParent: $('#searchListModalPopup')
        });
    });

    function showModalDropdown() {
        $('#searchListModalDropdown').addClass('show');
    }

    function closeDropdown() {
        $('#searchListModalDropdown').removeClass('show');
    }

    function setSearchFilterDatePicker() {
        var startDateString = "@searchModalStartDateString";
        var endDateString = "@searchModalEndDateString";
        var minDateString = "@today";
        var startDate;
        var startDateFormatted;
        var endDate;
        var endDateFormatted;
        var minDate;
        var minDateFormatted;

        startDate = moment(startDateString, "YYYY-MM-DD"); // Parse the start date string and specify the format
        startDateFormatted = startDate.format('M/DD/YYYY'); // Format the start date as desired
        endDate = moment(endDateString, "YYYY-MM-DD"); // Parse the end date string and specify the format
        endDateFormatted = endDate.format('M/DD/YYYY'); // Format the end date as desired
        minDate = moment(minDateString, "YYYY-MM-DD"); // Parse the min date string and specify the format
        minDateFormatted = minDate.format('M/DD/YYYY'); // Format the min date as desired

        $('#FilterStartDate').val(startDateFormatted); // Set initial value of StartDate on the form
        $('#FilterEndDate').val(endDateFormatted); // Set initial value of EndDate on the form

        $('input[name="searchdaterange"]').daterangepicker({
            startDate: startDateFormatted,
            endDate: endDateFormatted,
            minDate: minDateFormatted,
            timePickerIncrement: 30,
            drops: "down",
            locale: {
                format: 'M/DD/YYYY'
            }
        }).on('apply.daterangepicker', function (ev, picker) {
            startDateFormatted = picker.startDate.format('M/DD/YYYY');
            endDateFormatted = picker.endDate.format('M/DD/YYYY');
            $('#FilterStartDate').val(startDateFormatted); // Resets the value of StartDate when "Apply" is pressed
            $('#FilterEndDate').val(endDateFormatted); // Resets the value of EndDate when "Apply" is pressed
        });
    };

    function setTitle(title) {
        $('#searchModalTitle').html(title);
    }
    
    function filterEvents(e) {
        $.ajax({
            url: '@this.Url.Action("filterModalEvents", "Dashboard")',
            data: {
                start: $('#FilterStartDate').val(),
                end: $('#FilterEndDate').val(),
                type: e.type.value,
                searchTerm: e.searchTerm.value,
                teamName: e.teamName.value
            },
            success: function(data) {
                const title = "Events from " + $('#FilterStartDate').val() + " to " + $('#FilterEndDate').val();
                setTitle(title);
                $("#searchModalTable").html(data);
                $('#searchListModalDropdown').removeClass('show');
            }
        });
    }

    function resetEvents(e){
        $.ajax({
            url: '@this.Url.Action("filterModalEvents", "Dashboard")',
            data: {
                type: 'Event',
                start: "@searchModalStartDateString",
                end: "@searchModalEndDateString",
                teamName: "@selectedTeam",
                searchTerm: "@searchTerm"

            },
            success: function(data) {
                setTitle("@title");
                $("#teamNameSearchFilter").val(null).trigger('change');
                $('#searchModalTable').html(data);
                setSearchFilterDatePicker();
            }
        });
    }
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
<style>
    .custom-tooltip .tooltip-inner {
        max-width: 500px;
    }
</style>

<style media="print">
    .noPrintIfModal {
        display: none;
    }

    html, body {
        height: 100%;
        overflow: hidden;
    }
</style>